# -*- coding: utf-8 -*-
"""Mocked-API-Data-Preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZOAhc8t9o8j5fpRgKxnV31YZVRXdh_Zs
"""

import numpy as np
import pandas as pd

# read csv files as df
df_foodGroup = pd.read_csv("FOOD_GROUP.csv",encoding='latin-1')
df_foodName = pd.read_csv("FOOD_NAME.csv",encoding='latin-1')
df_nutrientAmt = pd.read_csv("NUTRIENT_AMOUNT.csv",encoding='latin-1')
df_nutrientName = pd.read_csv("NUTRIENT_NAME.csv",encoding='latin-1')

# Only select the following nutrients: protein, fat, carbohydrate, energy (kcal), sugars, sodium
NutrientIDs = [203,204,205,208,269,291,307,601,605,606]
df_nutrientName_filtered = df_nutrientName[df_nutrientName["NutrientID"].isin(NutrientIDs)]
# Join food name and group
df_food = pd.merge(df_foodName[["FoodID","FoodGroupID","FoodDescription"]],df_foodGroup[["FoodGroupID","FoodGroupName"]],on=["FoodGroupID"])
# Join with nutrient IDs
df_combined = pd.merge(df_nutrientAmt[["FoodID","NutrientID","NutrientValue"]],df_food[["FoodID","FoodGroupName","FoodDescription"]],on=["FoodID"])
# Join with nutrient names and units
df_combined = pd.merge(df_combined[["FoodDescription","FoodGroupName","NutrientID","NutrientValue"]],df_nutrientName_filtered[["NutrientID","NutrientName","NutrientUnit"]],on=["NutrientID"])
df_combined = df_combined.drop(columns=["NutrientID"])
# Sort by food description
df_combined = df_combined.sort_values("FoodDescription").reset_index(drop=True)

"""
*   **Total # of food sources**: 5689
*   **Total # of food groups**: 23
*   **Total # of available nutrients**: 10 (protein, fat, saturated fat, trans fat carbohydrate, energy, sugars, sodium, cholesterol, fibre)
"""

df_combined["NutrientAmt"] = df_combined["NutrientValue"].astype(str) + " " + df_combined["NutrientUnit"]

df_combined.NutrientName.unique()

# convert dataframe format (set nutrients names as columns)
format = {"Food":"Abiyuch, raw","Category":"Fruits and fruit juices","Servings":"100 g","Calories":"69.0 kCal","Fat":"0.1 g","Saturated Fat":"0.014 g","Trans Fat":np.NaN,"Cholesterol":"0.0 mg","Sodium":"20.0 mg","Carbohydrate":"17.6 g","Sugars":"8.55 g","Fibre":"5.3 g","Protein":"1.5 g"}
cols = df_combined.NutrientName.unique()
df_combined_clean = pd.DataFrame(format,index=[0])
for food in df_combined.FoodDescription.unique()[1:]:
  new_df = df_combined[df_combined["FoodDescription"]==food]
  category = new_df.FoodGroupName.unique()[0]
  sugars = new_df[new_df["NutrientName"]==cols[0]].NutrientAmt
  fat = new_df[new_df["NutrientName"]==cols[1]].NutrientAmt
  cholesterol = new_df[new_df["NutrientName"]==cols[2]].NutrientAmt
  energy = new_df[new_df["NutrientName"]==cols[3]].NutrientAmt
  sodium = new_df[new_df["NutrientName"]==cols[4]].NutrientAmt
  protein = new_df[new_df["NutrientName"]==cols[5]].NutrientAmt
  carbs = new_df[new_df["NutrientName"]==cols[6]].NutrientAmt
  saturated_fat = new_df[new_df["NutrientName"]==cols[7]].NutrientAmt
  fibre = new_df[new_df["NutrientName"]==cols[8]].NutrientAmt
  trans_fat = new_df[new_df["NutrientName"]==cols[9]].NutrientAmt

  arr = [energy,fat,saturated_fat,trans_fat,cholesterol,sodium,carbs,sugars,fibre,protein]
  try:
    for i in range(10):
      if (arr[i].empty==False):
        arr[i] = arr[i].item()
  except:
    continue
  
  new_format = {"Food":food,"Category":category,"Servings":"100 g","Calories":arr[0],"Fat":arr[1],"Saturated Fat":arr[2],"Trans Fat":arr[3],"Cholesterol":arr[4],"Sodium":arr[5],"Carbohydrate":arr[6],"Sugars":arr[7],"Fibre":arr[8],"Protein":arr[9]}
  try:
    new_format = pd.DataFrame(new_format,index=[0])
  except:
    continue
  if (new_format.isnull().sum().sum()==10):
    continue
  df_combined_clean = pd.concat([df_combined_clean,new_format])

df_Fruits = df_combined_clean[df_combined_clean["Category"]=="Fruits and fruit juices"].reset_index(drop=True)
df_Fruits = df_Fruits.fillna('')
df_Fruits["Category"] = "Fruits"
df_Fruits.to_dict(orient='records')

df_Dairy = df_combined_clean[df_combined_clean["Category"]=="Dairy and Egg Products"].reset_index(drop=True)
df_Dairy = df_Dairy.fillna('')
df_Dairy["Category"] = "Dairy"
df_Dairy.to_dict(orient='records')

df_Vegetables = df_combined_clean[df_combined_clean["Category"]=="Vegetables and Vegetable Products"].reset_index(drop=True)
df_Vegetables = df_Vegetables.fillna('')
df_Vegetables["Category"] = "Vegetables"
df_Vegetables.to_dict(orient='records')

grains_list = ["Nuts and Seeds","Legumes and Legume Products","Baked Products","Cereals, Grains and Pasta"]
df_Grains = df_combined_clean[df_combined_clean["Category"].isin(grains_list)].reset_index(drop=True)
df_Grains = df_Grains.fillna('')
df_Grains["Category"] = "Grains"
df_Grains.to_dict(orient='records')

proteins_list = ["Poultry Products","Sausages and Luncheon meats","Pork Products","Beef Products","Finfish and Shellfish Products","Lamb, Veal and Game"]
df_proteins = df_combined_clean[df_combined_clean["Category"].isin(proteins_list)].reset_index(drop=True)
df_proteins = df_proteins.fillna('')
df_proteins["Category"] = "Proteins"
df_proteins.to_dict(orient='records')

df_beverages = df_combined_clean[df_combined_clean["Category"]=="Beverages"].reset_index(drop=True)
df_beverages = df_beverages.fillna('')
df_beverages["Category"] = "Beverages"
df_beverages.to_dict(orient='records')